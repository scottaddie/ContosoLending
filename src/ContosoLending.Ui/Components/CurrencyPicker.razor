@using ContosoLending.DomainModel
@using ContosoLending.Ui.Services
@inject CurrencyConversionService CurrencyConversionService

<div class="input-group-prepend" @onclick="SwitchCurrencyType">
    <button class="btn btn-outline-secondary" type="button" disabled="@IsDisabled">@LoanAmount.CurrencyType</button>
</div>
<InputNumber id="loanAmount" @bind-Value="LoanAmount.Amount" disabled="@IsDisabled" class="form-control" />

@code {
    private bool IsDisabled { get; set; }

    [Parameter]
    public ViewModels.LoanAmount LoanAmount { get; set; }

    [Parameter]
    public EventCallback<ViewModels.LoanAmount> LoanAmountChanged { get; set; }

    private async Task SwitchCurrencyType()
    {
        IsDisabled = true;

        Currency currencyTypeFrom =
            CurrencyConversionService.GetCurrencyEnumValueFromSymbol(LoanAmount.CurrencyType);
        LoanAmount.CurrencyType = LoanAmount.CurrencyType == Constants.UsDollarSymbol
            ? Constants.BulgarianLevSymbol : Constants.UsDollarSymbol;

        if (LoanAmount.Amount > 0.00m)
        {
            Currency currencyTypeTo =
                CurrencyConversionService.GetCurrencyEnumValueFromSymbol(LoanAmount.CurrencyType);

            var conversion = new CurrencyConversion
            {
                CurrencyTypeFrom = currencyTypeFrom,
                CurrencyTypeTo = currencyTypeTo,
                AmountToConvert = LoanAmount.Amount,
            };

            LoanAmount.Amount = await CurrencyConversionService.GetConvertedAmountAsync(conversion);
            IsDisabled = false;
        }

        await LoanAmountChanged.InvokeAsync(LoanAmount);
    }
}
