@using ContosoLending.DomainModel
@using ContosoLending.Ui.Services
@using static ContosoLending.DomainModel.Constants
@inject CurrencyConversionService CurrencyConversionService

<div class="input-group-prepend" @onclick="SwitchCurrencyType">
    <button class="btn btn-outline-secondary" type="button">@LoanAmount.CurrencyType</button>
</div>
<InputNumber @bind-Value="LoanAmount.Amount" disabled="@IsTextBoxDisabled" class="form-control" />

@code {
    private bool IsTextBoxDisabled { get; set; }

    [Parameter]
    public ViewModels.LoanAmount LoanAmount { get; set; }

    [Parameter]
    public EventCallback<ViewModels.LoanAmount> LoanAmountChanged { get; set; }
    
    private async Task SwitchCurrencyType()
    {
        IsTextBoxDisabled = true;

        Currency currencyTypeFrom =
            CurrencyConversionService.GetCurrencyEnumValueFromSymbol(LoanAmount.CurrencyType);
        LoanAmount.CurrencyType = LoanAmount.CurrencyType == UsDollarSymbol
            ? BulgarianLevSymbol : UsDollarSymbol;

        if (LoanAmount.Amount > 0.00m)
        {
            Currency currencyTypeTo =
                CurrencyConversionService.GetCurrencyEnumValueFromSymbol(LoanAmount.CurrencyType);

            var conversion = new CurrencyConversion
            {
                CurrencyTypeFrom = currencyTypeFrom,
                CurrencyTypeTo = currencyTypeTo,
                AmountToConvert = LoanAmount.Amount,
            };

            LoanAmount.Amount = await CurrencyConversionService.GetConvertedAmountAsync(conversion);
        }

        IsTextBoxDisabled = false;
        await LoanAmountChanged.InvokeAsync(LoanAmount);
    }
}
